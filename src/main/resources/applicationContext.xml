<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans              http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/jee                http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
           http://www.springframework.org/schema/context            http://www.springframework.org/schema/context/spring-context-3.1.xsd
           ">

	<!-- 
	<bean id="dataSource" 
      		class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" 
                  value="java:comp/env/jdbc/GW_DATA_PORTAL"/>    
      <property name="resourceRef" 
                  value="true" /> 
	</bean> 
	-->
	
	<context:property-placeholder location="file:${HOME}/ngwmn.properties" ignore-resource-not-found="true" />
	<context:annotation-config/>
	
	<import resource="prefetchContext.xml"/>
	
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="wellRegistryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
  		<property name="mapperInterface" value="gov.usgs.ngwmn.dm.dao.WellRegistryMapper" />
  		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
    <bean id="WellRegistryDAO"
    	class="gov.usgs.ngwmn.dm.dao.WellRegistryDAO">
    	<property name="mapper" ref="wellRegistryMapper"/>
    	<property name="datasource" ref="dataSource"/>
   	</bean>
   	
   	<bean id="fetchLogMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
  		<property name="mapperInterface" value="gov.usgs.ngwmn.dm.dao.FetchLogMapper" />
  		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="FetchLogDAO"
		class="gov.usgs.ngwmn.dm.dao.FetchLogDAO">
		<constructor-arg ref="fetchLogMapper"/>
	</bean>
	
	<bean id="cacheMetaDataMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
  		<property name="mapperInterface" value="gov.usgs.ngwmn.dm.dao.CacheMetaDataMapper" />
  		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="CacheMetaDataDAO" 
			class="gov.usgs.ngwmn.dm.dao.CacheMetaDataDAO">
		<constructor-arg ref="cacheMetaDataMapper"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="FetchRecorder"
		class="gov.usgs.ngwmn.dm.io.FetchRecorder">
		<property name="dao" ref="FetchLogDAO"/>
	</bean>
	
 	<bean id="FetchEventBus" class="gov.usgs.ngwmn.dm.eventbus.EventBusSpring" destroy-method="shutdown">
 		<property name="subscribers">
     		<list>
       			<ref bean="FetchRecorder"/>
     		</list>
   		</property>
 	</bean>
 	<bean class="gov.usgs.ngwmn.dm.aspect.PipeStatisticsAspect"
 		factory-method="aspectOf">
 		<property name="eventBus" ref="FetchEventBus"/>
 	</bean>
		
	<jee:jndi-lookup id="FSCache.basedir" 
		jndi-name="java:comp/env/GWDP/FileCache/basedir" 
		default-value="/tmp/gwdp-cache"/>
		
	<bean id="FileCache"
		class="gov.usgs.ngwmn.dm.cache.fs.FileCache">
		<!-- Leave unset for fail-fast <property name="basedir" value="/tmp/gwdp-cache"/>  -->  
		<!-- Leave unset to disable file cache <property name="basedir" ref="FSCache.basedir"/> -->
	</bean>
	
	<bean id="RegistryCache" class="gov.usgs.ngwmn.dm.cache.NullCache">
		<constructor-arg value="REGISTRY"/>
	</bean>
	
	<bean id="Retriever"
		class="gov.usgs.ngwmn.dm.cache.Retriever">
		<constructor-arg>
			<list>
				<ref bean="FileCache"/>
				<ref bean="QualityCache"/>
				<ref bean="LogCache"/>
				<ref bean="LithologyCache"/>
				<ref bean="ConstructionCache"/>
				<ref bean="WaterlevelCache"/>
				<ref bean="RegistryCache"/>
			</list>
		</constructor-arg>
	</bean>
		
	<bean id="Loader"
		class="gov.usgs.ngwmn.dm.cache.Loader">
		<constructor-arg>
			<list>
				<ref bean="FileCache"/>
				<ref bean="QualityCache"/>
				<ref bean="LogCache"/>
				<ref bean="LithologyCache"/>
				<ref bean="ConstructionCache"/>
				<ref bean="WaterlevelCache"/>
				<ref bean="RegistryCache"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="CacheCleaner"
		class="gov.usgs.ngwmn.dm.cache.Cleaner">
		<property name="toClean">
		<list>
			<ref bean="QualityCache"/>
			<ref bean="LogCache"/>
			<ref bean="WaterlevelCache"/>
		</list>
		</property>
		<property name="daysToKeep" value="${ngwmn_cache_days_to_keep:90}"/>
		<property name="countToKeep" value="${ngwmn_cache_count_to_keep:3}"/>
	</bean>
	
	<bean id="WebRetriever"
			class="gov.usgs.ngwmn.dm.harvest.WebRetriever">
			<property name="urlFactory" ref="urlFactory"/>
			<property name="harvester">
				<bean class="gov.usgs.ngwmn.dm.harvest.Harvester"/>
			</property>
	</bean>
		
	<bean id="DataBroker" class="gov.usgs.ngwmn.dm.DataBroker">
		<property name="wellRegistry" ref="WellRegistryDAO"/>
		<property name="retriever" ref="Retriever"/>
		<property name="loader" ref="Loader"/>
		<property name="fetcher" ref="WebRetriever"/>
		<property name="cacheDAO" ref="CacheMetaDataDAO"/>
	</bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler">
		<property name="streamAsLob" value="true"/>
	</bean>
	
	<!-- shared among all three XML caches -->
	<bean id="singleThreadExecutor" 
        class="java.util.concurrent.Executors"
        factory-method="newCachedThreadPool" destroy-method="shutdown" />
        
    <bean id="QualityCache" class="gov.usgs.ngwmn.dm.cache.qw.DatabaseXMLCache">
    	<constructor-arg ref="dataSource"/>
    	<constructor-arg value="QUALITY"/>
    	<constructor-arg ref="lobHandler"/>    	
    	<property name="inspector" ref="WaterQualityInspector"/>
    	<property name="executorService" ref="singleThreadExecutor"/>
    </bean>
    
    <bean id="LogCache" class="gov.usgs.ngwmn.dm.cache.qw.DatabaseXMLCache">
    	<constructor-arg ref="dataSource"/>
    	<constructor-arg value="LOG"/>
    	<constructor-arg ref="lobHandler"/>
    	<property name="inspector" ref="WellLogInspector"/>
    	<property name="executorService" ref="singleThreadExecutor"/>
    </bean>
    
    <bean id="LithologyCache" class="gov.usgs.ngwmn.dm.cache.qw.DatabaseXMLCache">
    	<constructor-arg ref="dataSource"/>
    	<constructor-arg value="LITHOLOGY"/>
    	<constructor-arg ref="lobHandler"/>
    	<property name="inspector" ref="WellLogInspector"/>
    	<property name="executorService" ref="singleThreadExecutor"/>
    </bean>
    
    <bean id="ConstructionCache" class="gov.usgs.ngwmn.dm.cache.qw.DatabaseXMLCache">
    	<constructor-arg ref="dataSource"/>
    	<constructor-arg value="CONSTRUCTION"/>
    	<constructor-arg ref="lobHandler"/>
    	<property name="inspector" ref="WellLogInspector"/>
    	<property name="executorService" ref="singleThreadExecutor"/>
    </bean>
    
    
    <bean id="WaterlevelCache" class="gov.usgs.ngwmn.dm.cache.qw.DatabaseXMLCache">
    	<constructor-arg ref="dataSource"/>
    	<constructor-arg value="WATERLEVEL"/>
    	<constructor-arg ref="lobHandler"/>
    	<property name="inspector" ref="WaterLevelInspector"/>
    	<property name="executorService" ref="singleThreadExecutor"/>
    </bean>

	<bean id="WaterQualityInspector"  class="gov.usgs.ngwmn.dm.cache.qw.WaterQualityInspector">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="WaterLevelInspector"  class="gov.usgs.ngwmn.dm.cache.qw.WaterLevelInspector">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="WellLogInspector"  class="gov.usgs.ngwmn.dm.cache.qw.WellLogInspector">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="gwdp" class="java.lang.String">
		<constructor-arg value="${ngwmn_cocoon}/gin/gwdp"></constructor-arg>
	</bean>
	
	<!-- both ${...} and #{...} are evaluated at bean construction time, sigh. -->
   <bean id="urlFactory"
        class="gov.usgs.ngwmn.dm.harvest.SpringUrlFactory">
		<property name="mapping" >
			<props >
			<prop key="ALL">#{gwdp}/cache/download/xls/_{#agencyId}?featureId=_{#featureId}</prop>
			<prop          key="LOG">#{gwdp}/agency/_{#agencyId}/wfs?request=GetFeature&amp;featureId=_{#featureId}</prop>
			<prop    key="LITHOLOGY">#{gwdp}/agency/_{#agencyId}/wfs?request=GetFeature&amp;featureId=_{#featureId}</prop>
			<prop key="CONSTRUCTION">#{gwdp}/agency/_{#agencyId}/wfs?request=GetFeature&amp;featureId=_{#featureId}</prop>
			<prop key="WATERLEVEL">#{gwdp}/agency/_{#agencyId}/sos?request=GetObservation&amp;featureId=_{#featureId}</prop>
			<prop key="QUALITY">#{gwdp}/agency/_{#agencyId}/qw?mimeType=xml&amp;siteid=_{#featureId}</prop>
			<prop key="REGISTRY">#{gwdp}/well-registry/_{#agencyId}/_{#featureId}</prop>
			</props>
		</property>
    </bean>
	
	<bean id="WaterlevelStatsDAO" class="gov.usgs.ngwmn.dm.dao.FetchStatsDAO">
		<constructor-arg ref="dataSource"/>
		<constructor-arg value="WATERLEVEL"/>
	</bean>
		
	<bean id="QualityStatsDAO" class="gov.usgs.ngwmn.dm.dao.FetchStatsDAO">
		<constructor-arg ref="dataSource"/>
		<constructor-arg value="QUALITY"/>
	</bean>
	
	<bean id="WellLogStatsDAO" class="gov.usgs.ngwmn.dm.dao.FetchStatsDAO">
		<constructor-arg ref="dataSource"/>
		<constructor-arg value="LOG"/>
	</bean>
	
	<!-- this bean must not be lazily initialized if the exporting is to happen -->
  <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
    <property name="beans">
      <map>
        <entry key="ngwmn:name=PrefetchController" value-ref="PrefetchController"/>
      </map>
    </property>
    <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
  </bean>
	
	<beans profile="default">
		<!-- Note that the property reference ${gw_data_portal_pw} looks for a JNDI name java:comp/env/gw_data_portal_pw by default,
		 it can be supplied in the above properties file instead if you wish.
		 
		 jdbc:oracle:thin:@//widev.er.usgs.gov:1521/widev.er.usgs.gov
	 -->
	 
		 <bean id="dataSource" 
	        class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <!--  or org.apache.tomcat.dbcp.dbcp.BasicDataSource for the Tomcat variant -->
	    	<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	    	<property name="url" value="${ngwmn_cache_url}"/>
	    	<property name="username" value="${ngwmn_cache_username}"/>
	    	<property name="password" value="${ngwmn_cache_pw}"/>
	    	
	    	         	<property name="minIdle" value="0"/>
	    	         	<property name="maxIdle" value="6"/>
	         			<property name="maxActive" value="10"/>
	         			<property name="initialSize" value="1"/>
	         			<property name="testWhileIdle" value="true"/>
	         			<property name="testOnReturn" value="true"/>
	         			<property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>
	    	
			</bean>
	
	</beans>
	
	<beans profile="tomcat-ds" >
		<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    		<property name="jndiName" value="java:comp/env/jdbc/GW_DATA_PORTAL"/>
		</bean>
		
	</beans>
</beans>

       